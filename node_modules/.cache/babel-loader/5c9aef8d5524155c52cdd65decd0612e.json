{"ast":null,"code":"import _objectSpread from\"C:/Users/\\uC7A5\\uBCC0\\uB355/Desktop/project_sharukh_khan_afridi/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/\\uC7A5\\uBCC0\\uB355/Desktop/project_sharukh_khan_afridi/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import Values from\"values.js\";// function componenetToHex(c) {\n//   var hex = c.toString(16);\n//   return hex.length == 1 ? \"0\" + hex : hex;\n// }\n// function rgbToHex(r, g, b) {\n//   return \"#\" + componenetToHex(r) + componenetToHex(g) + componenetToHex(b);\n// }\nimport{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var SingleColor=function SingleColor(_ref){var rgb=_ref.rgb,weight=_ref.weight,index=_ref.index,hexColor=_ref.hexColor;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),Alert=_useState2[0],setAlert=_useState2[1];var bcg=rgb.join(\",\");var onClick=function onClick(){setAlert(true);navigator.clipboard.writeText(hexColor);setTimeout(function(){return setAlert(false);},3000);};return/*#__PURE__*/_jsxs(\"article\",{onClick:onClick,className:\"color \".concat(index>10&&\"color-light\"),style:{backgroundColor:\"rgb(\".concat(bcg,\")\")},children:[/*#__PURE__*/_jsxs(\"p\",{children:[weight,\"%\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"#\",hexColor]}),Alert&&/*#__PURE__*/_jsx(\"p\",{children:\"copied to clipboard\"})]});};export var ColorGenerator=function ColorGenerator(){var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),Color=_useState4[0],setColor=_useState4[1];var _useState5=useState(undefined),_useState6=_slicedToArray(_useState5,2),Divide=_useState6[0],setDivide=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),Error=_useState8[0],setError=_useState8[1];var _useState9=useState(new Values(\"#3443eb\").all(20)),_useState10=_slicedToArray(_useState9,2),List=_useState10[0],setList=_useState10[1];var handleSubmit=function handleSubmit(e){e.preventDefault();try{var colors=new Values(Color||\"#3443eb\").all(Divide||20);setList(colors);}catch(error){setError(true);console.log(error);}};return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"color generator\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:Color,onChange:function onChange(e){return setColor(e.target.value);},placeholder:\"#3443eb\",className:\"\".concat(Error?\"error\":null)}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"divide\",children:\"divide 100 per cent by :\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:Divide,onChange:function onChange(e){return setDivide(parseInt(e.target.value,0));},placeholder:\"20\",id:\"divide\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"submit\"})]})]}),/*#__PURE__*/_jsx(\"section\",{children:List.map(function(color,i){return/*#__PURE__*/_jsx(SingleColor,_objectSpread(_objectSpread({},color),{},{index:i,hexColor:color.hex}),i);})})]});};","map":{"version":3,"sources":["C:/Users/장변덕/Desktop/project_sharukh_khan_afridi/src/components/ColorGenerator.js"],"names":["React","useState","Values","SingleColor","rgb","weight","index","hexColor","Alert","setAlert","bcg","join","onClick","navigator","clipboard","writeText","setTimeout","backgroundColor","ColorGenerator","Color","setColor","undefined","Divide","setDivide","Error","setError","all","List","setList","handleSubmit","e","preventDefault","colors","error","console","log","target","value","parseInt","map","color","i","hex"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Values from \"values.js\";\r\n\r\n// function componenetToHex(c) {\r\n//   var hex = c.toString(16);\r\n//   return hex.length == 1 ? \"0\" + hex : hex;\r\n// }\r\n// function rgbToHex(r, g, b) {\r\n//   return \"#\" + componenetToHex(r) + componenetToHex(g) + componenetToHex(b);\r\n// }\r\n\r\nconst SingleColor = ({ rgb, weight, index, hexColor }) => {\r\n  const [Alert, setAlert] = useState(false);\r\n  const bcg = rgb.join(\",\");\r\n  \r\n  const onClick = () => {\r\n    setAlert(true);\r\n    navigator.clipboard.writeText(hexColor);\r\n    setTimeout(() => setAlert(false), 3000);\r\n};\r\n\r\n  return (\r\n      <article\r\n      onClick={onClick}\r\n      className={`color ${index > 10 && \"color-light\"}`}\r\n      style={{ backgroundColor: `rgb(${bcg})` }}\r\n      >\r\n      <p>{weight}%</p>\r\n      <p>#{hexColor}</p>\r\n      {Alert && <p>copied to clipboard</p>}\r\n    </article>\r\n  );\r\n};\r\n\r\nexport const ColorGenerator = () => {\r\n    const [Color, setColor] = useState(\"\");\r\n    const [Divide, setDivide] = useState(undefined);\r\n    const [Error, setError] = useState(false);\r\n    const [List, setList] = useState(new Values(\"#3443eb\").all(20));\r\n    \r\n    const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      let colors = new Values(Color ||\"#3443eb\").all(Divide || 20);\r\n      setList(colors);\r\n\r\n    } catch (error) {\r\n      setError(true);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section>\r\n        <h3>color generator</h3>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            value={Color}\r\n            onChange={(e) => setColor(e.target.value)}\r\n            placeholder=\"#3443eb\"\r\n            className={`${Error ? \"error\" : null}`}\r\n          ></input>\r\n          <label htmlFor=\"divide\">divide 100 per cent by :</label>\r\n          <input\r\n            type=\"text\"\r\n            value={Divide}\r\n            onChange={(e) => setDivide(parseInt(e.target.value, 0))}\r\n            placeholder=\"20\"\r\n            id=\"divide\"\r\n          ></input>\r\n          <button type=\"submit\">submit</button>\r\n        </form>\r\n      </section>\r\n      <section>\r\n        {List.map((color, i) => {\r\n          return (\r\n            <SingleColor key={i} {...color} index={i} hexColor={color.hex} />\r\n          );\r\n        })}\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}