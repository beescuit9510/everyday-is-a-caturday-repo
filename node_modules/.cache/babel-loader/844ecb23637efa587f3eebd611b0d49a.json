{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC7A5\\uBCC0\\uB355\\\\Desktop\\\\project_sharukh_khan_afridi\\\\src\\\\components\\\\ColorGenerator.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Values from \"values.js\"; // function componenetToHex(c) {\n//   var hex = c.toString(16);\n//   return hex.length == 1 ? \"0\" + hex : hex;\n// }\n// function rgbToHex(r, g, b) {\n//   return \"#\" + componenetToHex(r) + componenetToHex(g) + componenetToHex(b);\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SingleColor = ({\n  rgb,\n  weight,\n  index,\n  hexColor\n}) => {\n  _s();\n\n  const [Alert, setAlert] = useState(false);\n  const bcg = rgb.join(\",\");\n\n  const onClick = () => {\n    setAlert(true);\n    navigator.clipboard.writeText(hexColor);\n    setTimeout(() => setAlert(false), 3000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    onClick: onClick,\n    className: `color ${index > 10 && \"color-light\"}`,\n    style: {\n      backgroundColor: `rgb(${bcg})`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [weight, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"#\", hexColor]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), Alert && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"copied to clipboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this);\n};\n\n_s(SingleColor, \"XylzCu1iYGOqs8a+s/c9yCBliOQ=\");\n\n_c = SingleColor;\nexport const ColorGenerator = () => {\n  _s2();\n\n  const [Color, setColor] = useState(\"\");\n  const [Divide, setDivide] = useState(undefined);\n  const [Error, setError] = useState(false);\n  const [List, setList] = useState(new Values(\"#3443eb\").all(20));\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    try {\n      let colors = new Values(Color || \"#3443eb\").all(Divide || 20);\n      setList(colors);\n    } catch (error) {\n      setError(true);\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"color generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: Color,\n          onChange: e => setColor(e.target.value),\n          placeholder: \"#3443eb\",\n          className: `${Error ? \"error\" : null}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"divide\",\n          children: \"divide 100 per cent by :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: Divide,\n          onChange: e => setDivide(parseInt(e.target.value, 0)),\n          placeholder: \"20\",\n          id: \"divide\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: List.map((color, i) => {\n        return /*#__PURE__*/_jsxDEV(SingleColor, { ...color,\n          index: i,\n          hexColor: color.hex\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(ColorGenerator, \"Ucd4iRYjoPAnOZRCO7+jMSmj2pE=\");\n\n_c2 = ColorGenerator;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SingleColor\");\n$RefreshReg$(_c2, \"ColorGenerator\");","map":{"version":3,"sources":["C:/Users/장변덕/Desktop/project_sharukh_khan_afridi/src/components/ColorGenerator.js"],"names":["React","useState","Values","SingleColor","rgb","weight","index","hexColor","Alert","setAlert","bcg","join","onClick","navigator","clipboard","writeText","setTimeout","backgroundColor","ColorGenerator","Color","setColor","Divide","setDivide","undefined","Error","setError","List","setList","all","handleSubmit","e","preventDefault","colors","error","console","log","target","value","parseInt","map","color","i","hex"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Values from \"values.js\";\r\n\r\n// function componenetToHex(c) {\r\n//   var hex = c.toString(16);\r\n//   return hex.length == 1 ? \"0\" + hex : hex;\r\n// }\r\n// function rgbToHex(r, g, b) {\r\n//   return \"#\" + componenetToHex(r) + componenetToHex(g) + componenetToHex(b);\r\n// }\r\n\r\nconst SingleColor = ({ rgb, weight, index, hexColor }) => {\r\n  const [Alert, setAlert] = useState(false);\r\n  const bcg = rgb.join(\",\");\r\n  \r\n  const onClick = () => {\r\n    setAlert(true);\r\n    navigator.clipboard.writeText(hexColor);\r\n    setTimeout(() => setAlert(false), 3000);\r\n};\r\n\r\n  return (\r\n      <article\r\n      onClick={onClick}\r\n      className={`color ${index > 10 && \"color-light\"}`}\r\n      style={{ backgroundColor: `rgb(${bcg})` }}\r\n      >\r\n      <p>{weight}%</p>\r\n      <p>#{hexColor}</p>\r\n      {Alert && <p>copied to clipboard</p>}\r\n    </article>\r\n  );\r\n};\r\n\r\nexport const ColorGenerator = () => {\r\n    const [Color, setColor] = useState(\"\");\r\n    const [Divide, setDivide] = useState(undefined);\r\n    const [Error, setError] = useState(false);\r\n    const [List, setList] = useState(new Values(\"#3443eb\").all(20));\r\n    \r\n    const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      let colors = new Values(Color ||\"#3443eb\").all(Divide || 20);\r\n      setList(colors);\r\n\r\n    } catch (error) {\r\n      setError(true);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section>\r\n        <h3>color generator</h3>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            value={Color}\r\n            onChange={(e) => setColor(e.target.value)}\r\n            placeholder=\"#3443eb\"\r\n            className={`${Error ? \"error\" : null}`}\r\n          ></input>\r\n          <label htmlFor=\"divide\">divide 100 per cent by :</label>\r\n          <input\r\n            type=\"text\"\r\n            value={Divide}\r\n            onChange={(e) => setDivide(parseInt(e.target.value, 0))}\r\n            placeholder=\"20\"\r\n            id=\"divide\"\r\n          ></input>\r\n          <button type=\"submit\">submit</button>\r\n        </form>\r\n      </section>\r\n      <section>\r\n        {List.map((color, i) => {\r\n          return (\r\n            <SingleColor key={i} {...color} index={i} hexColor={color.hex} />\r\n          );\r\n        })}\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}