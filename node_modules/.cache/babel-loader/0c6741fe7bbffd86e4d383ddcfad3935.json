{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC7A5\\uBCC0\\uB355\\\\Desktop\\\\project_sharukh_khan_afridi\\\\src\\\\components\\\\Euthanasia.js\",\n    _s = $RefreshSig$();\n\n// import {catImgs, names, cityCountry, catSpecies, birthday} from \"../data/catData\";\nimport React, { useState } from \"react\";\nimport { Cats } from \"../data/catObject\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst List = ({\n  Cat,\n  notInterested,\n  refresh,\n  isEmpty\n}) => {\n  if (isEmpty()) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: refresh,\n      children: \"refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: Cat.map(cat => {\n        const {\n          NotInterested,\n          name,\n          age,\n          img,\n          euthanizeDay,\n          species,\n          id\n        } = cat;\n\n        if (NotInterested === false || NotInterested == undefined) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"...read more\"\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 20\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"article\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [age, \" years old\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: img,\n              alt: species,\n              width: \"50px\",\n              height: \"auto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [euthanizeDay, \" days left before euthnaizing\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => notInterested(id),\n              children: \"not interested\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 17\n            }, this)]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 15\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c = List;\nexport const Euthanasia = () => {\n  _s();\n\n  const [FullCatArr, setFullCatArr] = useState(Cats.filter(c => c.euthanizeDay < 7));\n  const [CatIndex, setCatIndex] = useState(3);\n\n  const catArr = (CatIndex, FullCatArr) => FullCatArr.filter((c, i) => i < CatIndex);\n\n  const [Cat, setCat] = useState(catArr(CatIndex, FullCatArr));\n\n  const moreCats = () => {\n    setCatIndex(CatIndex + 3);\n    setCat(catArr(CatIndex, FullCatArr));\n  };\n\n  const notInterested = ID => {\n    FullCatArr[FullCatArr.findIndex(c => {\n      let isC = c !== undefined ? true : false;\n      return isC ? c.id === ID : false;\n    })].NotInterested = true;\n    setCatIndex(3);\n    console.log(FullCatArr);\n    setCat(catArr(CatIndex, FullCatArr));\n  };\n\n  const refresh = () => {\n    setFullCatArr(FullCatArr.map(c => {\n      return { ...c,\n        NotInterested: false\n      };\n    }));\n    setCat(catArr(CatIndex, FullCatArr));\n  };\n\n  const isEmpty = () => {\n    return FullCatArr.every(c => c.NotInterested === true);\n  };\n\n  const MoreCatNbutton = () => /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: moreCats,\n    children: \"more cats\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 32\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [FullCatArr.length, \" cats about to be euthanized within the next week\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      Cat: Cat,\n      notInterested: notInterested,\n      refresh: refresh,\n      isEmpty: isEmpty\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), Cat.length === FullCatArr.length ? \"end of page\" : /*#__PURE__*/_jsxDEV(MoreCatNbutton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 59\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Euthanasia, \"Pt33UvfgrUzgTScofQoKbyDpo+o=\");\n\n_c2 = Euthanasia;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"List\");\n$RefreshReg$(_c2, \"Euthanasia\");","map":{"version":3,"sources":["C:/Users/장변덕/Desktop/project_sharukh_khan_afridi/src/components/Euthanasia.js"],"names":["React","useState","Cats","List","Cat","notInterested","refresh","isEmpty","map","cat","NotInterested","name","age","img","euthanizeDay","species","id","undefined","Euthanasia","FullCatArr","setFullCatArr","filter","c","CatIndex","setCatIndex","catArr","i","setCat","moreCats","ID","findIndex","isC","console","log","every","MoreCatNbutton","length"],"mappings":"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","sourcesContent":["// import {catImgs, names, cityCountry, catSpecies, birthday} from \"../data/catData\";\r\nimport React, { useState } from \"react\";\r\nimport { Cats } from \"../data/catObject\";\r\n\r\nconst List = ({ Cat, notInterested, refresh, isEmpty }) => {\r\n  if (isEmpty()) {\r\n    return <button onClick={refresh}>refresh</button>;\r\n  } else {\r\n    return (\r\n      <React.Fragment>\r\n        {Cat.map((cat) => {\r\n          const { NotInterested, name, age, img, euthanizeDay, species, id } =\r\n            cat;\r\n          if (NotInterested===false||NotInterested==undefined) {\r\n            return <div key={id}>...read more</div>;\r\n          } else {\r\n            return (\r\n              <article key={id}>\r\n                <p>{name}</p>\r\n                <p>{age} years old</p>\r\n                <img src={img} alt={species} width=\"50px\" height=\"auto\"></img>\r\n                <p>{euthanizeDay} days left before euthnaizing</p>\r\n                <button onClick={() => notInterested(id)}>\r\n                  not interested\r\n                </button>\r\n              </article>\r\n            );\r\n          }\r\n        })}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nexport const Euthanasia = () => {\r\n\r\n  const [FullCatArr, setFullCatArr] = useState(\r\n    Cats.filter((c) => c.euthanizeDay < 7)\r\n  );\r\n  const [CatIndex, setCatIndex] = useState(3);\r\n  const catArr = (CatIndex, FullCatArr) =>\r\n    FullCatArr.filter((c, i) => i < CatIndex);\r\n  const [Cat, setCat] = useState(catArr(CatIndex, FullCatArr));\r\n\r\n  const moreCats = () => {\r\n    setCatIndex(CatIndex + 3);\r\n    setCat(catArr(CatIndex, FullCatArr));\r\n  };\r\n\r\n  const notInterested = (ID) => {\r\n    FullCatArr[\r\n      FullCatArr.findIndex((c) => {\r\n        let isC = c !== undefined ? true : false;\r\n        return isC ? c.id === ID : false;\r\n      })\r\n    ].NotInterested = true;\r\n    setCatIndex(3);\r\n    console.log(FullCatArr)\r\n    setCat(catArr(CatIndex, FullCatArr));\r\n  };\r\n\r\n  const refresh = () => {\r\n    setFullCatArr(\r\n      FullCatArr.map((c) => {\r\n        return { ...c, NotInterested: false };\r\n      })\r\n    );\r\n    setCat(catArr(CatIndex, FullCatArr));\r\n  };\r\n\r\n  const isEmpty = () => {\r\n    return FullCatArr.every((c) => c.NotInterested === true);\r\n  };\r\n\r\n  const MoreCatNbutton = () => <button onClick={moreCats}>more cats</button>;\r\n\r\n  return (\r\n    <section>\r\n      <h3>\r\n        {FullCatArr.length} cats about to be euthanized within the next week\r\n      </h3>\r\n      <List\r\n        Cat={Cat}\r\n        notInterested={notInterested}\r\n        refresh={refresh}\r\n        isEmpty={isEmpty}\r\n      ></List>\r\n      {Cat.length === FullCatArr.length ? \"end of page\" : <MoreCatNbutton />}\r\n    </section>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}