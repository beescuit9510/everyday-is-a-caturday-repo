{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC7A5\\uBCC0\\uB355\\\\Desktop\\\\project_sharukh_khan_afridi\\\\src\\\\components\\\\Reviews.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nconst getLocalStorage = () => {\n  let list = localStorage.getItem(\"List\");\n\n  if (list) {\n    return JSON.parse(localStorage.getItem(\"List\"));\n  } else {\n    return [];\n  }\n};\n\nimport React, { useEffect, useState } from \"react\";\nimport { FaEdit, FaTrash } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AlertCpt = ({\n  type,\n  msg,\n  removeAlert,\n  List\n}) => {\n  _s();\n\n  //danger for red\n  //success for green\n  useEffect(() => {\n    const timeout = removeAlert();\n    return () => clearTimeout(timeout);\n  }, [List]);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: `alert alert${type}`,\n    children: msg\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AlertCpt, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = AlertCpt;\n\nconst Review = ({\n  reviews,\n  removeReview,\n  editReview\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: reviews.map(review => {\n      const {\n        id,\n        title\n      } = review;\n      return /*#__PURE__*/_jsxDEV(\"article\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => editReview(id),\n            children: /*#__PURE__*/_jsxDEV(FaEdit, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => removeReview(id),\n            children: /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Review;\nexport const Reviews = () => {\n  _s2();\n\n  const [List, setList] = useState(getLocalStorage());\n  useEffect(() => {\n    localStorage.setItem(\"List\", JSON.stringify(List));\n  }, [List]);\n  const [Name, setName] = useState(\"\");\n  const [IsEditing, setIsEditing] = useState(false);\n  const [EditId, setEditId] = useState(null);\n  const [Alert, setAlert] = useState({\n    show: false,\n    msg: \"\",\n    type: \"\"\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!Name) {\n      showAlert(true, \"please enter value\", \"danger\");\n    } else if (Name && IsEditing) {\n      setList(List.map(review => {\n        if (review.id === EditId) {\n          return { ...review,\n            title: Name\n          };\n        }\n      }));\n      setName('');\n      setEditId(null);\n      setIsEditing(false);\n      showAlert(true, \"review has changed\", \"success\");\n    } else {\n      showAlert(true, \"thank you for your review\", \"success\");\n      const newReview = {\n        id: new Date().getTime().toString(),\n        title: Name\n      };\n      setList([...List, newReview]);\n      setName(\"\");\n    }\n  };\n\n  const showAlert = (show = false, msg = \"\", type = \"\") => {\n    setAlert({\n      show,\n      msg,\n      type\n    });\n  };\n\n  const removeAlert = () => setTimeout(() => showAlert(false, \"\", \"\"), 3000);\n\n  const removeReview = id => {\n    showAlert(true, \"successfully removed the review\", \"danger\");\n    setList(List.filter(review => review.id !== id));\n  };\n\n  const editReview = id => {\n    const specificReview = List.find(i => i.id === id);\n    setIsEditing(true);\n    setEditId(id);\n    setName(specificReview.title);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [Alert.show && /*#__PURE__*/_jsxDEV(AlertCpt, { ...Alert,\n          removeAlert: removeAlert,\n          List: List\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"reviews\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"e.g. she can cook/ \\uCC29\\uD574!\",\n            value: Name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: IsEditing ? \"edit\" : \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), List.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Review, {\n          reviews: List,\n          removeReview: removeReview,\n          editReview: editReview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"clear reviews\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Reviews, \"pF/wfRTncF74sfF9i7s68fOSMJ4=\");\n\n_c3 = Reviews;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"AlertCpt\");\n$RefreshReg$(_c2, \"Review\");\n$RefreshReg$(_c3, \"Reviews\");","map":{"version":3,"sources":["C:/Users/장변덕/Desktop/project_sharukh_khan_afridi/src/components/Reviews.js"],"names":["getLocalStorage","list","localStorage","getItem","JSON","parse","React","useEffect","useState","FaEdit","FaTrash","AlertCpt","type","msg","removeAlert","List","timeout","clearTimeout","Review","reviews","removeReview","editReview","map","review","id","title","Reviews","setList","setItem","stringify","Name","setName","IsEditing","setIsEditing","EditId","setEditId","Alert","setAlert","show","handleSubmit","e","preventDefault","showAlert","newReview","Date","getTime","toString","setTimeout","filter","specificReview","find","i","target","value","length"],"mappings":"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","sourcesContent":["const getLocalStorage = ()=>{\r\n    let list = localStorage.getItem(\"List\");\r\n    if(list){\r\n        return JSON.parse(localStorage.getItem(\"List\"))\r\n    } else{\r\n        return []\r\n    }\r\n}\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { FaEdit, FaTrash } from \"react-icons/fa\";\r\n\r\nconst AlertCpt = ({ type, msg, removeAlert, List }) => {\r\n  //danger for red\r\n  //success for green\r\n  useEffect(() => {\r\n    const timeout = removeAlert();\r\n    return () => clearTimeout(timeout);\r\n  }, [List]);\r\n\r\n  return <p className={`alert alert${type}`}>{msg}</p>;\r\n};\r\n\r\nconst Review = ({ reviews, removeReview, editReview }) => {\r\n  return (\r\n    <div>\r\n      {reviews.map((review) => {\r\n        const { id, title } = review;\r\n        return (\r\n          <article key={id}>\r\n            <p>{title}</p>\r\n            <div>\r\n              <button type=\"button\" onClick={()=>editReview(id)}>\r\n                <FaEdit />\r\n              </button>\r\n              <button type=\"button\" onClick={() => removeReview(id)}>\r\n                <FaTrash />\r\n              </button>\r\n            </div>\r\n          </article>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Reviews = () => {\r\n    const [List, setList] = useState(getLocalStorage());\r\n    \r\n      useEffect(()=>{\r\n          localStorage.setItem(\"List\", JSON.stringify(List))\r\n      },[List])\r\n    \r\n\r\n    const [Name, setName] = useState(\"\");\r\n  const [IsEditing, setIsEditing] = useState(false);\r\n  const [EditId, setEditId] = useState(null);\r\n  const [Alert, setAlert] = useState({ show: false, msg: \"\", type: \"\" });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!Name) {\r\n      showAlert(true, \"please enter value\", \"danger\");\r\n    } else if (Name && IsEditing) {\r\n        setList(List.map((review)=>{\r\n            if(review.id===EditId){\r\n                return{...review, title:Name}\r\n            }\r\n        }))\r\n        setName('');\r\n        setEditId(null);\r\n        setIsEditing(false);\r\n      showAlert(true, \"review has changed\", \"success\");\r\n\r\n    } else {\r\n      showAlert(true, \"thank you for your review\", \"success\");\r\n\r\n      const newReview = { id: new Date().getTime().toString(), title: Name };\r\n      setList([...List, newReview]);\r\n      setName(\"\");\r\n    }\r\n  };\r\n\r\n  const showAlert = (show = false, msg = \"\", type = \"\") => {\r\n    setAlert({ show, msg, type });\r\n  };\r\n\r\n  const removeAlert = () => setTimeout(() => showAlert(false, \"\", \"\"), 3000);\r\n\r\n  const removeReview = (id) => {\r\n    showAlert(true, \"successfully removed the review\", \"danger\");\r\n    setList(List.filter((review) => review.id !== id));\r\n  };\r\n\r\n  const editReview = (id) => {\r\n    const specificReview = List.find((i) => i.id === id);\r\n    setIsEditing(true);\r\n    setEditId(id);\r\n    setName(specificReview.title);\r\n  };\r\n\r\n\r\n  return (\r\n    <section>\r\n      <div>\r\n        <form onSubmit={handleSubmit}>\r\n          {Alert.show && (\r\n            <AlertCpt {...Alert} removeAlert={removeAlert} List={List} />\r\n          )}\r\n          <h3>reviews</h3>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"e.g. she can cook/ 착해!\"\r\n              value={Name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></input>\r\n            <button type=\"submit\">{IsEditing ? \"edit\" : \"submit\"}</button>\r\n          </div>\r\n        </form>\r\n        {List.length > 0 && (\r\n          <div>\r\n            <Review\r\n              reviews={List}\r\n              removeReview={removeReview}\r\n              editReview={editReview}\r\n            ></Review>\r\n            <button>clear reviews</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}