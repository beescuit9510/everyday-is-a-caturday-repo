{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC7A5\\uBCC0\\uB355\\\\Desktop\\\\project_sharukh_khan_afridi\\\\src\\\\components\\\\CatApi.js\",\n    _s = $RefreshSig$();\n\nimport fetch from \"node-fetch\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Loading = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Loading;\n\nconst Cats = ({\n  CatArr\n}) => {\n  console.log(CatArr);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"hello kitten\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n};\n\n_c2 = Cats;\nexport const CatApi = () => {\n  _s();\n\n  const [IsLoading, setIsLoading] = useState(true);\n  const [CatArr, setCatArr] = useState([]);\n  const url = \"https://api.thecatapi.com/v1/breeds\";\n\n  const fetchCats = async () => {\n    setIsLoading(true);\n\n    try {\n      const response = await fetch(url);\n      const cats = await response.json();\n      setIsLoading(false);\n      setCatArr(cats);\n    } catch (err) {\n      setIsLoading(false);\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    fetchCats();\n  }, []);\n\n  if (IsLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Cats, {\n        props: CatArr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(CatApi, \"ILUso+eHCpEud8QqVgMgaRl3kfs=\");\n\n_c3 = CatApi;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Loading\");\n$RefreshReg$(_c2, \"Cats\");\n$RefreshReg$(_c3, \"CatApi\");","map":{"version":3,"sources":["C:/Users/장변덕/Desktop/project_sharukh_khan_afridi/src/components/CatApi.js"],"names":["fetch","React","useEffect","useState","Loading","Cats","CatArr","console","log","CatApi","IsLoading","setIsLoading","setCatArr","url","fetchCats","response","cats","json","err"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;KAAMA,O;;AAQN,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACF,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAHD;;MAAMD,I;AAKN,OAAO,MAAMI,MAAM,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACG,MAAD,EAASM,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAMU,GAAG,GAAG,qCAAZ;;AAEA,QAAMC,SAAS,GAAG,YAAY;AAC5BH,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,QAAI;AACF,YAAMI,QAAQ,GAAG,MAAMf,KAAK,CAACa,GAAD,CAA5B;AACA,YAAMG,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAnB;AACAN,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAC,MAAAA,SAAS,CAACI,IAAD,CAAT;AACD,KALD,CAKE,OAAOE,GAAP,EAAY;AACZP,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ;AACD;AACF,GAXD;;AAaAhB,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAIJ,SAAJ,EAAe;AACb,wBACE;AAAA,6BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAND,MAMO;AACL,wBACE;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAEJ;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;AACF,CApCM;;GAAMG,M;;MAAAA,M","sourcesContent":["import fetch from \"node-fetch\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div>\r\n      <h3>Loading...</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Cats = ({CatArr}) => {\r\n    console.log(CatArr)\r\n  return <div>hello kitten</div>;\r\n};\r\n\r\nexport const CatApi = () => {\r\n  const [IsLoading, setIsLoading] = useState(true);\r\n  const [CatArr, setCatArr] = useState([]);\r\n\r\n  const url = \"https://api.thecatapi.com/v1/breeds\";\r\n\r\n  const fetchCats = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch(url);\r\n      const cats = await response.json();\r\n      setIsLoading(false);\r\n      setCatArr(cats);\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCats();\r\n  }, []);\r\n\r\n  if (IsLoading) {\r\n    return (\r\n      <div>\r\n        <Loading></Loading>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <Cats props={CatArr}></Cats>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}