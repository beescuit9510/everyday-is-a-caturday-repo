{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC7A5\\uBCC0\\uB355\\\\Desktop\\\\project_sharukh_khan_afridi\\\\src\\\\components\\\\Reviews.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { FaEdit, FaTrash } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AlertCpt = ({\n  type,\n  msg,\n  removeAlert,\n  List\n}) => {\n  _s();\n\n  //danger for red\n  //success for green\n  useEffect(() => {\n    const timeout = removeAlert();\n    return () => clearTimeout(timeout);\n  }, [List]);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: `alert alert${type}`,\n    children: msg\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AlertCpt, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = AlertCpt;\n\nconst Review = ({\n  reviews,\n  removeReview,\n  editReview\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: reviews.map(review => {\n      const {\n        id,\n        title,\n        nickname\n      } = review;\n      let half = Math.floor(nickname.length() / 2);\n      let theOtherHalf = nickname.length - half;\n      return /*#__PURE__*/_jsxDEV(\"article\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: nickname.splice(0, half) + \"*\" * theOtherHalf\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => editReview(id),\n            children: /*#__PURE__*/_jsxDEV(FaEdit, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => removeReview(id),\n            children: /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Review;\nexport const Reviews = () => {\n  _s2();\n\n  const getLocalStorage = () => {\n    let list = localStorage.getItem(\"List\");\n\n    if (list) {\n      return JSON.parse(localStorage.getItem(\"List\"));\n    } else {\n      return [];\n    }\n  };\n\n  const [List, setList] = useState(getLocalStorage());\n  useEffect(() => {\n    localStorage.setItem(\"List\", JSON.stringify(List));\n  }, [List]);\n  const [Name, setName] = useState(\"\");\n  const [NickName, setNickName] = useState(\"\");\n  const [Password, setPassword] = useState(null);\n  const [IsEditing, setIsEditing] = useState(false);\n  const [EditId, setEditId] = useState(null);\n  const [Alert, setAlert] = useState({\n    show: false,\n    msg: \"\",\n    type: \"\"\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!Name) {\n      showAlert(true, \"please enter value\", \"danger\");\n    } else if (Name && IsEditing) {\n      let newList = List.map(review => {\n        if (review.id === EditId) {\n          if (Password === review.password && NickName == review.nickname) {\n            return { ...review,\n              title: Name\n            };\n          }\n        }\n      });\n\n      if (newList) {\n        setList(newList);\n      } else showAlert(true, \"check your passsword or nickname\", \"danger\");\n\n      setName(\"\");\n      setNickName(\"\");\n      setPassword(\"\");\n      setEditId(null);\n      setIsEditing(false);\n      showAlert(true, \"review has changed\", \"success\");\n    } else {\n      showAlert(true, \"thank you for your review\", \"success\");\n      const newReview = {\n        id: new Date().getTime().toString(),\n        title: Name,\n        nickname: NickName,\n        password: Password\n      };\n      setList([...List, newReview]);\n      setName(\"\");\n      setPassword(\"\");\n      setNickName(\"\");\n    }\n  };\n\n  const showAlert = (show = false, msg = \"\", type = \"\") => {\n    setAlert({\n      show,\n      msg,\n      type\n    });\n  };\n\n  const removeAlert = () => setTimeout(() => showAlert(false, \"\", \"\"), 3000);\n\n  const removeReview = id => {\n    showAlert(true, \"successfully removed the review\", \"danger\");\n    setList(List.filter(review => review.id !== id));\n  };\n\n  const editReview = id => {\n    const specificReview = List.find(i => i.id === id);\n    setIsEditing(true);\n    setEditId(id);\n    setName(specificReview.title);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [Alert.show && /*#__PURE__*/_jsxDEV(AlertCpt, { ...Alert,\n          removeAlert: removeAlert,\n          List: List\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"reviews\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: Password,\n            onClick: e => setPassword(e.target.value),\n            placeholder: \"e.g. 0123\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"nickName\",\n            children: \"Nickname:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: NickName,\n            onClick: e => setPassword(e.target.value),\n            placeholder: \"e.g. \\uBCC0\\uB355\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"e.g. she can cook/ \\uCC29\\uD574!\",\n            value: Name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: IsEditing ? \"edit\" : \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), List.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Review, {\n          reviews: List,\n          removeReview: removeReview,\n          editReview: editReview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"clear reviews\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Reviews, \"kIWpeE7a3png6oalDTlKSHRvspo=\");\n\n_c3 = Reviews;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"AlertCpt\");\n$RefreshReg$(_c2, \"Review\");\n$RefreshReg$(_c3, \"Reviews\");","map":{"version":3,"sources":["C:/Users/장변덕/Desktop/project_sharukh_khan_afridi/src/components/Reviews.js"],"names":["React","useEffect","useState","FaEdit","FaTrash","AlertCpt","type","msg","removeAlert","List","timeout","clearTimeout","Review","reviews","removeReview","editReview","map","review","id","title","nickname","half","Math","floor","length","theOtherHalf","splice","Reviews","getLocalStorage","list","localStorage","getItem","JSON","parse","setList","setItem","stringify","Name","setName","NickName","setNickName","Password","setPassword","IsEditing","setIsEditing","EditId","setEditId","Alert","setAlert","show","handleSubmit","e","preventDefault","showAlert","newList","password","newReview","Date","getTime","toString","setTimeout","filter","specificReview","find","i","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { FaEdit, FaTrash } from \"react-icons/fa\";\r\n\r\nconst AlertCpt = ({ type, msg, removeAlert, List }) => {\r\n  //danger for red\r\n  //success for green\r\n  useEffect(() => {\r\n    const timeout = removeAlert();\r\n    return () => clearTimeout(timeout);\r\n  }, [List]);\r\n\r\n  return <p className={`alert alert${type}`}>{msg}</p>;\r\n};\r\n\r\nconst Review = ({ reviews, removeReview, editReview }) => {\r\n  return (\r\n    <div>\r\n      {reviews.map((review) => {\r\n        const { id, title, nickname } = review;\r\n        let half = Math.floor(nickname.length() / 2);\r\n        let theOtherHalf = nickname.length - half;\r\n        return (\r\n          <article key={id}>\r\n            <p>{nickname.splice(0, half) + \"*\" * theOtherHalf}</p>\r\n            <p>{title}</p>\r\n            <div>\r\n              <button type=\"button\" onClick={() => editReview(id)}>\r\n                <FaEdit />\r\n              </button>\r\n              <button type=\"button\" onClick={() => removeReview(id)}>\r\n                <FaTrash />\r\n              </button>\r\n            </div>\r\n          </article>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Reviews = () => {\r\n  const getLocalStorage = () => {\r\n    let list = localStorage.getItem(\"List\");\r\n    if (list) {\r\n      return JSON.parse(localStorage.getItem(\"List\"));\r\n    } else {\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const [List, setList] = useState(getLocalStorage());\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"List\", JSON.stringify(List));\r\n  }, [List]);\r\n\r\n  const [Name, setName] = useState(\"\");\r\n  const [NickName, setNickName] = useState(\"\");\r\n  const [Password, setPassword] = useState(null);\r\n  const [IsEditing, setIsEditing] = useState(false);\r\n  const [EditId, setEditId] = useState(null);\r\n  const [Alert, setAlert] = useState({ show: false, msg: \"\", type: \"\" });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!Name) {\r\n      showAlert(true, \"please enter value\", \"danger\");\r\n    } else if (Name && IsEditing) {\r\n      let newList = List.map((review) => {\r\n        if (review.id === EditId) {\r\n          if (Password === review.password && NickName == review.nickname) {\r\n            return { ...review, title: Name };\r\n          }\r\n        }\r\n      });\r\n      if(newList){\r\n          setList(newList)\r\n      }else(\r\n          showAlert(true, \"check your passsword or nickname\",\"danger\")\r\n      )\r\n\r\n      setName(\"\");\r\n      setNickName(\"\");\r\n      setPassword(\"\")\r\n      setEditId(null);\r\n      setIsEditing(false);\r\n      showAlert(true, \"review has changed\", \"success\");\r\n    } else {\r\n      showAlert(true, \"thank you for your review\", \"success\");\r\n\r\n      const newReview = {\r\n        id: new Date().getTime().toString(),\r\n        title: Name,\r\n        nickname: NickName,\r\n        password: Password,\r\n      };\r\n      setList([...List, newReview]);\r\n      setName(\"\");\r\n      setPassword(\"\");\r\n      setNickName(\"\");\r\n    }\r\n  };\r\n\r\n  const showAlert = (show = false, msg = \"\", type = \"\") => {\r\n    setAlert({ show, msg, type });\r\n  };\r\n\r\n  const removeAlert = () => setTimeout(() => showAlert(false, \"\", \"\"), 3000);\r\n\r\n  const removeReview = (id) => {\r\n    showAlert(true, \"successfully removed the review\", \"danger\");\r\n    setList(List.filter((review) => review.id !== id));\r\n  };\r\n\r\n  const editReview = (id) => {\r\n    const specificReview = List.find((i) => i.id === id);\r\n    setIsEditing(true);\r\n    setEditId(id);\r\n    setName(specificReview.title);\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <div>\r\n        <form onSubmit={handleSubmit}>\r\n          {Alert.show && (\r\n            <AlertCpt {...Alert} removeAlert={removeAlert} List={List} />\r\n          )}\r\n          <h3>reviews</h3>\r\n          <div>\r\n            <label htmlFor=\"password\">password</label>\r\n            <input\r\n              type=\"password\"\r\n              value={Password}\r\n              onClick={(e) => setPassword(e.target.value)}\r\n              placeholder=\"e.g. 0123\"\r\n            ></input>\r\n            <label htmlFor=\"nickName\">Nickname:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={NickName}\r\n              onClick={(e) => setPassword(e.target.value)}\r\n              placeholder=\"e.g. 변덕\"\r\n            ></input>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"e.g. she can cook/ 착해!\"\r\n              value={Name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></input>\r\n            <button type=\"submit\">{IsEditing ? \"edit\" : \"submit\"}</button>\r\n          </div>\r\n        </form>\r\n        {List.length > 0 && (\r\n          <div>\r\n            <Review\r\n              reviews={List}\r\n              removeReview={removeReview}\r\n              editReview={editReview}\r\n            ></Review>\r\n            <button>clear reviews</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}