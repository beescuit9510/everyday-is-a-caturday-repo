{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC7A5\\uBCC0\\uB355\\\\Desktop\\\\project_sharukh_khan_afridi\\\\src\\\\components\\\\CatApi.js\",\n    _s = $RefreshSig$();\n\nimport fetch from \"node-fetch\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"\";\n\nconst Loading = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Loading;\n\nconst Cats = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"hello kitten\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 10\n  }, this);\n};\n\n_c2 = Cats;\nexport const CatApi = () => {\n  _s();\n\n  const [IsLoading, setIsLoading] = useState(true);\n  const [CatArr, setArr] = useState([]);\n\n  const fetchCats = async () => {\n    setIsLoading(true);\n    const response = await fetch(url);\n    const cats = await response;\n  };\n\n  if (IsLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Cats, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(CatApi, \"6R/WzBc2Zy7B5xZhmkMUAYQnpcI=\");\n\n_c3 = CatApi;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Loading\");\n$RefreshReg$(_c2, \"Cats\");\n$RefreshReg$(_c3, \"CatApi\");","map":{"version":3,"sources":["C:/Users/장변덕/Desktop/project_sharukh_khan_afridi/src/components/CatApi.js"],"names":["fetch","React","useState","url","Loading","Cats","CatApi","IsLoading","setIsLoading","CatArr","setArr","fetchCats","response","cats"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,GAAG,GAAG,EAAZ;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;KAAMA,O;;AAQN,MAAMC,IAAI,GAAG,MAAM;AACjB,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;MAAMA,I;AAIN,OAAO,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACO,MAAD,EAASC,MAAT,IAAmBR,QAAQ,CAAC,EAAD,CAAjC;;AAEA,QAAMS,SAAS,GAAG,YAAS;AACvBH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAMI,QAAQ,GAAG,MAAMZ,KAAK,CAACG,GAAD,CAA5B;AACA,UAAMU,IAAI,GAAG,MAAMD,QAAnB;AACH,GAJD;;AAMA,MAAIL,SAAJ,EAAe;AACb,wBACE;AAAA,6BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAND,MAMO;AACL,wBACE;AAAA,6BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;AACF,CAvBM;;GAAMD,M;;MAAAA,M","sourcesContent":["import fetch from \"node-fetch\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst url = \"\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div>\r\n      <h3>Loading...</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Cats = () => {\r\n  return <div>hello kitten</div>;\r\n};\r\n\r\nexport const CatApi = () => {\r\n  const [IsLoading, setIsLoading] = useState(true);\r\n  const [CatArr, setArr] = useState([]);\r\n\r\n  const fetchCats = async()=>{\r\n      setIsLoading(true);\r\n      const response = await fetch(url)\r\n      const cats = await response\r\n  }\r\n\r\n  if (IsLoading) {\r\n    return (\r\n      <div>\r\n        <Loading></Loading>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <Cats></Cats>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}