{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC7A5\\uBCC0\\uB355\\\\Desktop\\\\project_sharukh_khan_afridi\\\\src\\\\components\\\\CatApi.js\",\n    _s = $RefreshSig$();\n\nimport fetch from \"node-fetch\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Loading = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Loading;\n\nconst Cats = ({\n  props\n}) => {\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Hello kitten\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), props.map(cat => /*#__PURE__*/_jsxDEV(Cat, {\n        cat: cat\n      }, cat.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Cats;\n\nconst Cat = ({\n  cat: {\n    description,\n    image: {},\n    life_span,\n    name,\n    origin\n  }\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: origin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"the average life span: \", life_span]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image.url,\n      alt: name,\n      width: \"50px\",\n      height: \"auto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Cat;\nexport const CatApi = () => {\n  _s();\n\n  const [IsLoading, setIsLoading] = useState(true);\n  const [CatArr, setCatArr] = useState([]);\n  const url = \"https://api.thecatapi.com/v1/breeds\";\n\n  const fetchCats = async () => {\n    setIsLoading(true);\n\n    try {\n      const response = await fetch(url);\n      const cats = await response.json();\n      setIsLoading(false);\n      setCatArr(cats);\n    } catch (err) {\n      setIsLoading(false);\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    fetchCats();\n  }, []);\n\n  if (IsLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Cats, {\n        props: CatArr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(CatApi, \"ILUso+eHCpEud8QqVgMgaRl3kfs=\");\n\n_c4 = CatApi;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Loading\");\n$RefreshReg$(_c2, \"Cats\");\n$RefreshReg$(_c3, \"Cat\");\n$RefreshReg$(_c4, \"CatApi\");","map":{"version":3,"sources":["C:/Users/장변덕/Desktop/project_sharukh_khan_afridi/src/components/CatApi.js"],"names":["fetch","React","useEffect","useState","Loading","Cats","props","console","log","map","cat","id","Cat","description","image","life_span","name","origin","url","CatApi","IsLoading","setIsLoading","CatArr","setCatArr","fetchCats","response","cats","json","err"],"mappings":"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","sourcesContent":["import fetch from \"node-fetch\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div>\r\n      <h3>Loading...</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Cats = ({ props }) => {\r\n  console.log(props);\r\n  return (\r\n    <section>\r\n      <div>\r\n        <h3>Hello kitten</h3>\r\n        {props.map((cat) => (\r\n          <Cat key={cat.id} cat={cat}></Cat>\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nconst Cat = ({cat:{description, image:{}, life_span, name, origin} }) => {\r\n  return (\r\n    <article>\r\n      <p>{name}</p>\r\n      <p>{origin}</p>\r\n      <p>the average life span: {life_span}</p>\r\n      <img src={image.url} alt={name} width=\"50px\" height=\"auto\"></img>\r\n      <p>{description}</p>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport const CatApi = () => {\r\n  const [IsLoading, setIsLoading] = useState(true);\r\n  const [CatArr, setCatArr] = useState([]);\r\n\r\n  const url = \"https://api.thecatapi.com/v1/breeds\";\r\n\r\n  const fetchCats = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch(url);\r\n      const cats = await response.json();\r\n      setIsLoading(false);\r\n      setCatArr(cats);\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCats();\r\n  }, []);\r\n\r\n  if (IsLoading) {\r\n    return (\r\n      <div>\r\n        <Loading></Loading>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <Cats props={CatArr}></Cats>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}