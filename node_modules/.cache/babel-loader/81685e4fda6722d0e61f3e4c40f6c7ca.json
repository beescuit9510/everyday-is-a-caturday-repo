{"ast":null,"code":"// import React, { useContext, useState, createContext } from \"react\";\n// const AppContext = createContext();\n// const AppProvider = ({ children }) => {\n//   const [IsSideBarOpen, setIsSideBarOpen] = useState(false);\n//   const [IsModalOpen, setIsModalOpen] = useState(false);\n//   const openSider = () => setIsSideBarOpen(true);\n//   const closeSider = () => setIsSideBarOpen(false);\n//   const openModal = () => setIsModalOpen(true);\n//   const closeModal = () => setIsModalOpen(false);\n//   return (\n//     <AppContext.Provider\n//       value={{\n//         IsModalOpen,\n//         IsSideBarOpen,\n//         openModal,\n//         closeModal,\n//         openSider,\n//         closeSider,\n//       }}\n//     >\n//       {children}\n//     </AppContext.Provider>\n//   );\n// };\n// export const useGlobalContext = () => {\n//   return useContext(AppContext);\n// };\n// export { AppProvider, AppContext };","map":{"version":3,"sources":["C:/Users/장변덕/Desktop/project_sharukh_khan_afridi/src/components/NavAppUseContext.js"],"names":[],"mappings":"AAAA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA","sourcesContent":["// import React, { useContext, useState, createContext } from \"react\";\r\n\r\n// const AppContext = createContext();\r\n\r\n// const AppProvider = ({ children }) => {\r\n//   const [IsSideBarOpen, setIsSideBarOpen] = useState(false);\r\n//   const [IsModalOpen, setIsModalOpen] = useState(false);\r\n\r\n//   const openSider = () => setIsSideBarOpen(true);\r\n//   const closeSider = () => setIsSideBarOpen(false);\r\n//   const openModal = () => setIsModalOpen(true);\r\n//   const closeModal = () => setIsModalOpen(false);\r\n\r\n//   return (\r\n//     <AppContext.Provider\r\n//       value={{\r\n//         IsModalOpen,\r\n//         IsSideBarOpen,\r\n//         openModal,\r\n//         closeModal,\r\n//         openSider,\r\n//         closeSider,\r\n//       }}\r\n//     >\r\n//       {children}\r\n//     </AppContext.Provider>\r\n//   );\r\n// };\r\n\r\n// export const useGlobalContext = () => {\r\n//   return useContext(AppContext);\r\n// };\r\n\r\n// export { AppProvider, AppContext };\r\n"]},"metadata":{},"sourceType":"module"}